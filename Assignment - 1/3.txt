# 3.Explain about expressions in python and write about types of expressions and give an example program.

An expression is a combination of operators and operands that is interpreted to produce some other value. In any programming language, an expression is evaluated as per the precedence of its operators. So that if there is more than one operator in an expression, their precedence decides which operation will be performed first. We have many different types of expressions in Python.

1. Constant Expressions: These are the expressions that have constant values only.
# Constant Expressions
x = 15 + 1.3
print(x)

# Output
16.3

2. Arithmetic Expressions: An arithmetic expression is a combination of numeric values, operators, and sometimes parenthesis. The result of this type of expression is also a numeric value. The operators used in these expressions are arithmetic operators like addition, subtraction, etc
# Arithmetic Expressions
x = 40
y = 12

add = x + y
sub = x - y
pro = x * y
div = x / y

print(add)
print(sub)
print(pro)
print(div)

# Output
52
28
480
3.3333333333333335

3. Integral Expressions: These are the kind of expressions that produce only integer results after all computations and type conversions.
# Integral Expressions
a = 13
b = 12.0

c = a + int(b)
print(c)

# Output
25

4. Floating Expressions: These are the kind of expressions which produce floating point numbers as result after all computations and type conversions.
# Floating Expressions
a = 13
b = 5

c = a / b
print(c)

# Output
2.6

5. Relational Expressions: In these types of expressions, arithmetic expressions are written on both sides of relational operator (> , < , >= , <=). Those arithmetic expressions are evaluated first, and then compared as per relational operator and produce a boolean output in the end. These expressions are also called Boolean expressions.
# Relational Expressions
a = 21
b = 13
c = 40
d = 37

p = (a + b) >= (c - d)
print(p)

# Output
True

6. Logical Expressions: These are kinds of expressions that result in either True or False. It basically specifies one or more conditions.
P = (10 == 9)
Q = (7 > 5)

# Logical Expressions
R = P and Q
S = P or Q
T = not P

print(R)
print(S)
print(T)

# Output
False
True
True

7. Bitwise Expressions: These are the kind of expressions in which computations are performed at bit level.
# Bitwise Expressions
a = 12

x = a >> 2
y = a << 1

print(x, y)

# Output
3 24

8. Combinational Expressions: We can also use different types of expressions in a single expression, and that will be termed as combinational expressions.
# Combinational Expressions
a = 16
b = 12

c = a + (b >> 1)
print(c)

# Output
22

